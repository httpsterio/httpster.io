*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(147 197 253 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(147 197 253 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

/* Modern reset: https://piccalil.li/blog/a-modern-css-reset/ */

/* Box sizing rules */

*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */

body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */

ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Prevent zooming when orientation changes on some iOS devices */

html {
  -moz-text-size-adjust: none;
       text-size-adjust: none;
  -webkit-text-size-adjust: none;
}

/* Set core root defaults */

html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */

body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */

a:not([class]) {
  -webkit-text-decoration-skip: ink;
          text-decoration-skip-ink: auto;
}

/* Make images easier to work with */

img,
picture {
  max-inline-size: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */

input,
button,
textarea,
select {
  font: inherit;
}

/* Adding cursor style to interactive elements */

button,
[type='button'],
[type='reset'],
[type='submit'],
[type='image'],
[type='checkbox'],
[type='radio'],
summary {
  cursor: pointer;
}

@font-face {
  font-family: Inter;

  font-style: normal;

  font-display: swap;

  font-weight: 400;

  src: local(''), url(/assets/fonts/inter/inter-v7-latin-500.woff2) format('woff2'),
    url(/assets/fonts/inter/inter-v7-latin-500.woff) format('woff');
}

@font-face {
  font-family: Inter;

  font-style: normal;

  font-display: swap;

  font-weight: 700;

  src: local(''), url(/assets/fonts/inter/inter-v7-latin-700.woff2) format('woff2'),
    url(/assets/fonts/inter/inter-v7-latin-700.woff) format('woff');
}

@font-face {
  font-family: Redhat;

  font-style: normal;

  font-display: swap;

  font-weight: 700;

  src: local(''),
    url(/assets/fonts/redhat/red-hat-display-v7-latin-900.woff2) format('woff2'),
    url(/assets/fonts/redhat/red-hat-display-v7-latin-900.woff) format('woff');
}

@font-face {
  font-family: 'RobotoMono';

  font-weight: normal;

  font-style: normal;

  font-display: swap;

  src: local(''),
    url(/assets/fonts/robotomono/robotomono-variablefont_wght-webfont.woff2)
      format('woff2'),
    url(/assets/fonts/robotomono/robotomono-variablefont_wght-webfont.woff) format('woff');
}

:root {
}

/* Global variables */

:root {
  --gutter: var(--space-s-m);
  --border-radius: 0.5rem;
  --transition-duration: 250ms;
  --transition-timing: ease;
  --wrapper-width: clamp(16rem, 93vw, 85rem);
  --tracking: -0.05ch;
  --tracking-s: -0.075ch;
}

/*
  Global styles

  Low-specificity, global styles that apply to the whole
  project: https://cube.fyi/css.html
*/

body {
  color: var(--color-dark);
  background-color: var(--color-light);
  font-size: var(--size-step-1);
  font-family: var(--font-base);
  line-height: 1.4;
  letter-spacing: var(--tracking);
  display: flex;
  flex-direction: column;
}

main {
  flex: auto;
}

/* Base typesetting */

h1,
h2,
h3 {
  line-height: 1;
  letter-spacing: var(--tracking-s);
  font-family: var(--font-display);
}

h1 {
  font-size: var(--size-step-5);
}

h2 {
  font-size: var(--size-step-4);
}

h3 {
  font-size: var(--size-step-3);
}

/* Set line lengths */

p,
li,
blockquote:not([class]) {
  max-inline-size: 50ch;
}

h1,
h2,
h3 {
  max-inline-size: 20ch;
}

blockquote {
  border-inline-start: 0.8rem solid var(--color-primary);
  padding: var(--space-m-l);
  font-size: var(--size-step-2);
}

blockquote > * + * {
  margin-block-start: var(--space-m-l);
}

blockquote :last-child {
  font-family: var(--font-base);
  font-style: normal;
  font-size: var(--size-step-1);
}

svg {
  block-size: 2ex;
  inline-size: auto;
  flex: none;
}

[role='list'] {
  padding: 0;
}

/* Base interactive elements */

a {
  color: currentcolor;
}

a:hover {
  text-decoration: none;
}

:focus {
  outline: 3px solid;
  outline-offset: 0.3ch;
}

:target {
  scroll-margin-top: 2ex;
}

main:focus {
  outline: none;
}

article [href^='http']:not([href*='httpster.io']) {
  padding-inline-end: 0.8em;
}

article
  [href^='http']:not([href*='httpster.io']):not(.no-indicator)::after {
  position: absolute;
  display: inline-block;
  inline-size: 1em;
  block-size: 1em;
  background-image: url('/assets/images/icn-external.svg');
  background-repeat: no-repeat;
  background-position: center;
  background-size: 60% auto;
  /* alternative text rules */
  content: '(external link)';
  overflow: hidden;
  white-space: nowrap;
  text-indent: 1em;
  /* the width of the icon */
}

/* Base selection styles that invert whatever colours are rendered */

::-moz-selection {
  background: var(--color-dark);
  color: var(--color-light);
}

::selection {
  background: var(--color-dark);
  color: var(--color-light);
}

.preload-transitions * {
  transition: none !important;
}

@import-glob 'blocks/*.css';

@import-glob 'compositions/*.css';

@import-glob 'utilities/*.css';

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.visible {
  visibility: visible;
}

.static {
  position: static;
}

.block {
  display: block;
}

.table {
  display: table;
}

.grid {
  display: grid;
}

.overflow-hidden {
  overflow: hidden;
}

.text-center {
  text-align: center;
}

.uppercase {
  text-transform: uppercase;
}

.lowercase {
  text-transform: lowercase;
}

.no-underline {
  text-decoration-line: none;
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
